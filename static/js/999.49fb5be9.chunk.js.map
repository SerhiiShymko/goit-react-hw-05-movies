{"version":3,"file":"static/js/999.49fb5be9.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/Api/api.js"],"sourcesContent":["import { FidgetSpinner } from 'react-loader-spinner';\n\nfunction Spiner() {\n  return (\n    <FidgetSpinner\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n      ballColors={['#ff0000', '#00ff00', '#0000ff']}\n      backgroundColor=\"#F4442E\"\n    />\n  );\n}\n\nexport default Spiner;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchForm_searchbar__ufFAl\",\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchFormButton\":\"SearchForm_searchFormButton__Zv-9i\",\"input\":\"SearchForm_input__HOxJo\"};","import { FaSearch } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <div className={css.searchbar}>\n      <form className={css.searchForm} onSubmit={onSubmit}>\n        <button className={css.searchFormButton} type=\"submit\">\n          <FaSearch size={12} />\n        </button>\n\n        <input\n          className={css.input}\n          name=\"movieName\"\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n          required\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie...\"\n        />\n      </form>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesPage_container__jgAeo\",\"searchbar\":\"MoviesPage_searchbar__zuyTo\",\"searchForm\":\"MoviesPage_searchForm__oPV05\",\"searchFormButton\":\"MoviesPage_searchFormButton__CiqdZ\",\"input\":\"MoviesPage_input__16dJ5\"};","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { searchMovies } from '../../services/Api/api';\nimport { useState, useEffect } from 'react';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [moviesList, setMoviesList] = useState([]);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName).then(data => {\n      if (!data || !data.results || data.results.length === 0) {\n        setIsLoading(false);\n        setError(true);\n\n        return console.log(\n          'There are no movies for this request. Please, try again'\n        );\n      }\n      setError(false);\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const search = e.currentTarget;\n    setSearchParams({ movieName: search.elements.movieName.value });\n    search.reset();\n  };\n\n  return (\n    <main className={css.container}>\n      <SearchForm onSubmit={handleSubmit} setSearchParams={setSearchParams} />\n      {error && <p>There is no movies with this request. Please, try again</p>}\n      <ul>\n        {moviesList.map(movie => (\n          <li key={movie.id} className={css.listColor}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title || movie.name}\n            </Link>\n          </li>\n        ))}\n        {isLoading && <Loader />}\n      </ul>\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'f492f391e784a6c6bab08c174c3d150f';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/all/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie`;\n\nexport async function getTrending() {\n  const url = `${TREND_URL}?api_key=${API_KEY}&language=en-US`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\nexport async function searchMovies(query) {\n  const url = `${SEARCH_URL}?api_key=${API_KEY}&include_adult=false&query=${query}&language=en-US&page=1`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\nexport async function getMovieDetails(id) {\n  const url = `${ID_URL}/${id}?api_key=${API_KEY}&language=en-US`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\nexport async function getMovieCast(id) {\n  const url = `${ID_URL}/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n\nexport async function getMovieReviews(id) {\n  const url = `${ID_URL}/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n  return await axios\n    .get(url)\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => console.log(error));\n}\n"],"names":["visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ballColors","backgroundColor","onSubmit","className","css","type","size","name","pattern","title","required","autoComplete","autoFocus","placeholder","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","useState","isLoading","setIsLoading","error","setError","moviesList","setMoviesList","useEffect","searchMovies","then","data","results","length","console","log","e","preventDefault","search","currentTarget","elements","value","reset","map","movie","to","id","state","from","original_title","Loader","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","getTrending","url","axios","response","catch","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}